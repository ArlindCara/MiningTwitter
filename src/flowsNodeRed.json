[{"id":"a80496f.6bb9d68","type":"tab","label":"Flow 4","disabled":false,"info":""},{"id":"d5dab1af.130c1","type":"http in","z":"a80496f.6bb9d68","name":"","url":"/dsxinsights2","method":"get","upload":false,"swaggerDoc":"","x":170,"y":380,"wires":[["72421e7a.92664"]]},{"id":"452b7935.9eb158","type":"http response","z":"a80496f.6bb9d68","name":"","statusCode":"","headers":{},"x":830,"y":380,"wires":[]},{"id":"8d180e3c.46058","type":"comment","z":"a80496f.6bb9d68","name":"Flow that renders a Web UI","info":"","x":230,"y":320,"wires":[]},{"id":"4745e97c.6c79c8","type":"template","z":"a80496f.6bb9d68","name":"JS+HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!doctype html>\n<html>\n\n<head>\n\t<title>Mining twitter</title>\n\n\t<meta name=\"viewport\" \n\t\tcontent=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n\n\t<script src=\"https://code.jquery.com/jquery-3.2.1.min.js\"></script>\n\t<script src=\"http://code.jquery.com/ui/1.12.1/jquery-ui.min.js\"></script>\n\n\t<link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\n\n\t<script src=\"https://d3js.org/d3.v4.js\"></script>\n\t\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    <style>{{{payload.style}}}</style>\n    <head>\n    <title>Convert JSON Data to HTML Table</title>\n    <style>\n        th, td, p, input {\n            font:14px Verdana;\n        }\n        table, th, td \n        {\n            border: solid 1px #DDD;\n            border-collapse: collapse;\n            padding: 2px 3px;\n            text-align: center;\n        }\n        th {\n            font-weight:bold;\n        }\n    </style>\n</head>\n\t\n</head>\n\n<script>\n    // Update with base URL mentioned in the documentation\n\tvar websocketURL = \"NODERED_BASE_URL\";\n\t\n\t$(document).ready(function() {\t\n\t\tif (websocketURL.includes(\"NODERED_BASE_URL\")) {\n\t\t\talert(\"Node-red Base URL is not provided. Please refer documentation.\")\n\t\t}\n\n    });\n\t\n\t\n\t\t\n\t//Socket communication\n\tvar socket = new  WebSocket(websocketURL);\n\t\t\t\n\tsocket.onopen = function() {\n\t\tvar message = {\n\t\t\t'cmd': 'MiningTwitter FrontEnd connected'\n\t\t};\n\t\tsocket.send(JSON.stringify(message));\n\t};\n\t\t\t\n\tsocket.onclose = function(){\n\t\tconsole.log('MiningTwitter FrontEnd closed');\n\t};\n\n\tsocket.onerror = function(error) {\n\t\tconsole.log('Error detected: ' + error);\n\t};\n\t\t\t\n\tsocket.onmessage = function(e) {\n\t\tvar server_message = e.data;\n\t\tresponseObject = JSON.parse(server_message);\n\t\tif (responseObject[\"forcmd\"] == \"MINING\"){\n            var cmd = responseObject[\"forcmd\"]\n\t\t\t\n\t        var jsondata =responseObject[\"response\"];\n\t\t\tvar data = jsondata;\n            \n            \n            CreateTableFromJSON(data);\n            CreateButton(data);\n        \n\t\t} \n\t\tif (responseObject[\"forcmd\"] == \"MININGHASHTAG\"){\n            var cmd = responseObject[\"forcmd\"]\n\t\t\t\n\t        var jsondata =responseObject[\"response\"];\n\t\t\tvar data = jsondata;\n            \n            \n            CreateTableFromJSON(data);\n            CreateButton(data);\n        \n\t\t} \n\t\t\n\t};\n\t\t\n\tfunction send(msg) {\n\t\twait_for_socket_connection(socket, function() {\n\t\t\tsocket.send(msg);\n\t\t});\n\t};\n\t\t\n\tfunction wait_for_socket_connection(socket, callback){\n\t\tsetTimeout(\n\t\t\tfunction(){\n\t\t\t\tif (socket.readyState === 1) {\n\t\t\t\t\tif(callback !== undefined){\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\twait_for_socket_connection(socket,callback);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}, 5);\n\t};\n\n    function CreateButton(json_data){\n        \n        var button = document.createElement(\"button\");\n        button.innerHTML = \"Download table as CSV\";\n\n\n        //  Add listener\n        button.addEventListener (\"click\", function() {\n            /*\n            var json = $.parseJSON(json_data);\n            var fields = Object.keys(json[0])\n            var replacer = function(key, value) { return value === null ? '' : value } \n            var csv = json.map(function(row){\n              return fields.map(function(fieldName){\n                return JSON.stringify(row[fieldName], replacer)\n              }).join(',')\n            })\n            csv.unshift(fields.join(',')) // add header column\n            csv = csv.join('\\r\\n');\n            */\n            \n            var csv = convertToCSV(json_data);\n            \n            var downloadLink = document.createElement(\"a\");\n            var blob = new Blob([\"\\ufeff\", csv]);\n            var url = URL.createObjectURL(blob);\n            downloadLink.href = url;\n            downloadLink.download = \"data.csv\";\n            \n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n          \n        });\n        \n        var divContainer = document.getElementById(\"scaricaDati\");\n        divContainer.innerHTML = \"\";\n        divContainer.appendChild(button);\n        \n    }\n\nfunction convertToCSV(objArray) {\n    var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    \n    \n    \n    var str = '';\n    \n    var myBooks = JSON.parse(objArray);\n    \n        for (var i = 0; i < myBooks.length; i++) {\n            if(i == 1) {\n                break;\n            }\n            for (var key in myBooks[i]) {\n                if(key.valueOf() != myBooks[i].length)\n                    str+= key+',';\n                \n                \n            }\n            /*\n            for (var j=0; j<myBooks[i].length; j++ ) {\n                //if(j != (myBooks[i].length)-1 )\n                    str+= key+',';\n                \n                //else\n                //    str+=key;\n            }\n            */\n            \n        }\n    str = str.slice(0, -1);\n    str += '\\r\\n\"';\n    for (var i = 0; i < array.length; i++) {\n        var line = '';\n        for (var index in array[i]) {\n            if (line != '') line += '\",\"'\n            var tmp = String(array[i][index]);\n            var res = tmp.replace(/,/g, \"\",\"\");\n            //line += array[i][index];\n            line += res;\n        }\n        if(i!=array.length-1)\n            str += line + '\"\\r\\n\"';\n        else\n            str += line + '\"\\r\\n';\n    }\n\n    return str;\n}\n\n\n\tfunction drawCharts() {\n\n        var user = $('#user').val();\n        var hashtag = $('#hashtag').val();\n        var numTweet = $('#number').val();\n        var numTweetHashtag = $('#number2').val();\n\n        //get data from notebook to load in sample data view  \n\t\tvar datamessage = {\"cmd\":\"MINING\", \"user\":user, \"hashtag\":hashtag, \"numTweet\":numTweet};\n\t\tsend(JSON.stringify(datamessage));\n\n\t\t\n\t};\n\t\n\tfunction drawChartsHashtag(){\n\t  \n        var hashtag = $('#hashtag').val();\n        var numTweetHashtag = $('#number2').val();\n\n        //get data from notebook to load in sample data view  \n\t\tvar datamessage = {\"cmd\":\"MININGHASHTAG\", \"hashtag\":hashtag, \"numTweet\":numTweetHashtag};\n\t\tsend(JSON.stringify(datamessage));\n\n\t    \n\t};\n\t\n\nfunction CreateTableFromJSON(json_data) {\n        \n        var myBooks = JSON.parse(json_data);\n        \n        // EXTRACT VALUE FOR HTML HEADER. \n        var col = [];\n        for (var i = 0; i < myBooks.length; i++) {\n            for (var key in myBooks[i]) {\n                if (col.indexOf(key) === -1) {\n                    col.push(key);\n                }\n            }\n        }\n\n        // CREATE DYNAMIC TABLE.\n        var table = document.createElement(\"table\");\n        \n        var urlRegex =/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\n        \n        function linkify(text) {\n            var urlRegex =/(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\n                return text.replace(urlRegex, function(url) {\n                return '<a href=\"' + url + '\">' + url + '</a>';\n            });\n        }\n        \n\n\n      \n        // CREATE HTML TABLE HEADER ROW USING THE EXTRACTED HEADERS ABOVE.\n\n        var tr = table.insertRow(-1);                   // TABLE ROW.\n\n        for (var i = 0; i < col.length; i++) {\n            var th = document.createElement(\"th\");      // TABLE HEADER.\n            th.innerHTML = col[i];\n            tr.appendChild(th);\n        }\n\n        // ADD JSON DATA TO THE TABLE AS ROWS.\n        for (var i = 0; i < myBooks.length; i++) {\n\n            tr = table.insertRow(-1);\n\n            for (var j = 0; j < col.length; j++) {\n                var tabCell = tr.insertCell(-1);\n                \n                if(j == 0){\n                    var str = linkify(myBooks[i][col[j]]);\n                    //document.write(str);\n                    tabCell.innerHTML = str;\n                }\n                \n                else if(j == 3){\n                    timeStamp_value = myBooks[i][col[j]];\n                    var theDate = new Date(timeStamp_value);\n                    dateString = theDate.toGMTString();\n                    tabCell.innerHTML = dateString;\n                }\n                \n                else if(j == 4){\n                    var str = linkify(myBooks[i][col[j]]);\n                    //document.write(str);\n                    tabCell.innerHTML = str;\n                }\n                \n                else if(j == 9){\n                    var str = linkify(myBooks[i][col[j]]);\n                    //document.write(str);\n                    tabCell.innerHTML = str;\n                }\n              \n                else if(j == 12){\n                    timeStamp_value = myBooks[i][col[j]];\n                    var theDate = new Date(timeStamp_value);\n                    dateString = theDate.toGMTString();\n                    tabCell.innerHTML = dateString;\n                }\n                else{\n                    tabCell.innerHTML = myBooks[i][col[j]];\n                }\n            }\n        }\n\n        // ADD THE NEWLY CREATED TABLE WITH JSON DATA TO A CONTAINER.\n        var divContainer = document.getElementById(\"showData\");\n        divContainer.innerHTML = \"\";\n        divContainer.appendChild(table);\n        \n        \n        \n    }\n\n\t\n</script>\n\n<body>\n\n<h1 style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\">MiningTwitter</h1>\n\n<div style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\">\n\n<div>\n    <div>\n        <h2 style=\"font-size:160%;\">Inserire User</h2>\n        <label for=\"user\">User</label>\n        <input type=\"text\" id=\"user\" name=\"user\" placeholder=\"inserire user...\">\n        <label for=\"tentacles\">Inserire numero di tweet da cercare:</label>\n        <input id=\"number\" name=\"number\" type=\"number\" value=\"1\" min=\"1\" max=\"1000\" oninput=\"validity.valid||(value='');\">\n    </div>\n    <input type=\"submit\" value=\"Cerca tweet utente\" onclick=\"drawCharts()\">\n</div>\n\n\n<div>\n    <div class=\"block\">\n        <h2>Inserire hashtag o parola chiave</h2>\n        <label for=\"hashtag\">hashtag</label>\n        <input type=\"text\" id=\"hashtag\" name=\"hashtag\" placeholder=\"inserire #hashtag o parola chiave...\">\n        <label for=\"tentacles\">Inserire numero di tweet da cercare:</label>\n        <input id=\"number2\" name=\"number\" type=\"number\" value=\"1\" min=\"1\" max=\"1000\" oninput=\"validity.valid||(value='');\">\n    </div>\n    <input type=\"submit\" value=\"Cerca tweet con hashtag\" onclick=\"drawChartsHashtag()\">\n</div>\n\n</div>\n\n</div>\n\n    <p id=\"showData\">  </p>\n    \n    <p id=\"scaricaDati\"> </p>\n    \n\n</body> \n\n</html>","x":600,"y":380,"wires":[["452b7935.9eb158"]]},{"id":"7d3fc0ff.63b3f","type":"websocket in","z":"a80496f.6bb9d68","name":"","server":"c7df487e.b7a738","client":"","x":210,"y":200,"wires":[["2bf6432.f0942bc","6779003f.11243"]]},{"id":"6779003f.11243","type":"function","z":"a80496f.6bb9d68","name":"","func":"msg._session=\"\";\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":470,"y":200,"wires":[["79772639.e96a78"]]},{"id":"2bf6432.f0942bc","type":"debug","z":"a80496f.6bb9d68","name":"","active":true,"console":"false","complete":"false","x":390,"y":120,"wires":[]},{"id":"79772639.e96a78","type":"websocket out","z":"a80496f.6bb9d68","name":"","server":"c7df487e.b7a738","client":"","x":720,"y":200,"wires":[]},{"id":"3008fe98.50f9c2","type":"comment","z":"a80496f.6bb9d68","name":"Flow that creates a Web socket server ","info":"This flow creates a web socket server","x":270,"y":58,"wires":[]},{"id":"72421e7a.92664","type":"template","z":"a80496f.6bb9d68","name":"CSS","field":"payload.style","fieldType":"msg","format":"html","syntax":"mustache","template":"input[type=text], select {\n    font-family: Arial, Helvetica, sans-serif;\n    font-weight: 400;\n    font-size: 14px;\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\nh1{\n    font-family: Arial, Helvetica, sans-serif;\n    font-weight: bold;\n    font-size: 30px;\n    width: 100%;\n}\n\ninput[type=submit] {\n    width: 100%;\n    background-color: #ff531a;\n    color: white;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\ninput[type=submit]:hover {\n    background-color:  #cc6600;\n}\n\ndiv {\n    font-family: Arial, Helvetica, sans-serif;\n    border-radius: 5px;\n    background-color: #ccffff;\n    padding: 20px;\n}\n\nbody{\n    background-color: #ffffff;\n    padding-bottom: 50px;\n}\n\nbutton {\n \tdisplay:inline-block;\n\tposition: absolute;\n\tpadding: 10px 22px;\n    margin-left:42%;\n\tbackground-color: #575252;\n\tcolor: white;\n  \n\tfont-family: sans-serif;\n\ttext-decoration: none;\n\tfont-size: 0.9em;\n\ttext-align: center;\n\ttext-indent: 15px;\n\tborder-radius: 4px;\n}\nbutton:hover {\n  background-color: #333;\n\tcolor: white;\n\tcursor: pointer;\n}\n\nbutton:before, button:after {\n\tcontent: ' ';\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 15px;\n\ttop: 52%;\n}\n\n/* Download box shape  */\nbutton:before {\n\twidth: 10px;\n\theight: 2px;\n\tborder-style: solid;\n\tborder-width: 0 2px 2px;\n}\n\n/* Download arrow shape */\nbutton:after {\n\twidth: 0;\n\theight: 0;\n\tmargin-left: 3px;\n\tmargin-top: -7px;\n  \n\tborder-style: solid;\n\tborder-width: 4px 4px 0 4px;\n\tborder-color: transparent;\n\tborder-top-color: inherit;\n\t\n\tanimation: downloadArrow 2s linear infinite;\n\tanimation-play-state: paused;\n}\n\nbutton:hover:before {\n\tborder-color: #f2ff00;\n}\n\nbutton:hover:after {\n\tborder-top-color: #f2ff00;\n\tanimation-play-state: running;\n}\n\n\n@keyframes downloadArrow {\n\t/* 0% and 0.001% keyframes used as a hackish way of having the button frozen on a nice looking frame by default */\n\t0% {\n\t\tmargin-top: -7px;\n\t\topacity: 1;\n\t}\n\t\n\t0.001% {\n\t\tmargin-top: -15px;\n\t\topacity: 0;\n\t}\n\t\n\t50% {\n\t\topacity: 1;\n\t}\n\t\n\t100% {\n\t\tmargin-top: 0;\n\t\topacity: 0;\n\t}\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\nth, td {\n  padding: 8px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\ntd {\n    overflow: hidden;\n    height: 100px;\n    text-overflow: scroll;\n}\n\ntr:hover {background-color:#ccffff;}","x":410,"y":380,"wires":[["4745e97c.6c79c8"]]},{"id":"693cc156.3a836","type":"comment","z":"a80496f.6bb9d68","name":"Nodo websocket in","info":"","x":170,"y":160,"wires":[]},{"id":"4625101c.bbda2","type":"comment","z":"a80496f.6bb9d68","name":"Nodo websocket out","info":"","x":730,"y":160,"wires":[]},{"id":"23d71620.c7397a","type":"comment","z":"a80496f.6bb9d68","name":"Nodo http in con metodo get","info":"","x":200,"y":420,"wires":[]},{"id":"e6167f6a.5a99e","type":"comment","z":"a80496f.6bb9d68","name":"Nodo http response","info":"","x":830,"y":420,"wires":[]},{"id":"6d91e649.27dcd8","type":"comment","z":"a80496f.6bb9d68","name":"CSS e JS/HTML sono nodi template","info":"","x":520,"y":420,"wires":[]},{"id":"c7df487e.b7a738","type":"websocket-listener","z":"","path":"/ws/orchestrate","wholemsg":"false"}]